name: "Publish release"

on:
  pull_request:
    branches:
      - main
    types:
      - closed

jobs:
  release:
    name: Publish release
    runs-on: ubuntu-latest
    
    if: github.event.pull_request.merged == true # only merged pull requests must trigger this job
    steps:
      - name: Extract version from branch name (for release branches)
        if: startsWith(github.event.pull_request.head.ref, 'release/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#release/}
          M_VERSION=$(echo "${VERSION%.*.*}")
          echo "MAJOR_VERSION=$M_VERSION" >> $GITHUB_ENV
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: Extract version from branch name (for hotfix branches)
        if: startsWith(github.event.pull_request.head.ref, 'hotfix/')
        run: |
          BRANCH_NAME="${{ github.event.pull_request.head.ref }}"
          VERSION=${BRANCH_NAME#hotfix/}
          echo "RELEASE_VERSION=$VERSION" >> $GITHUB_ENV
      - name: createTag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          custom_tag: ${{ env.RELEASE_VERSION }}
      - name: createMajorTag
        id: mtag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: false
          custom_tag: ${{ env.MAJOR_VERSION }}
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_version }}
          body: ${{ steps.tag_version.outputs.changelog }}
          draft: false
          prerelease: false
       
      # - name: Create Tag
      #   id: create_tag
      #   uses: avakar/tag-and-release@v1
      #   with:
      #     tag_name: ${{ github.event.pull_request.head.ref }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
#       - name: Create Tag
#         id: create_tag
#         uses: jaywcjlove/create-tag-action@main
#         with:
#           version: ${{ env.RELEASE_VERSION }}
#           test: '[R|r]elease[d]\s+[v|V]\d(\.\d+){0,2}'  
          
    # create tags 
    # e.g. branch: release/1.0.0 
    # create tag v1 and tag v1.0.0
    # create release 1.0.0 with tag v1.0.0
    
